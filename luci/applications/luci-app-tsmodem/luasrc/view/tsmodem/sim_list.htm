<% --[[=========== JS ==========]] %>
<%+tsmodem/ui_utils/utils.js%>
<%+tsmodem/ui_utils/external.js%>
<%+tsmodem/ui_override/TextFieldStyled.js%>
<%+tsmodem/sim.js%>

<% --[[=========== UI WIDGETS ==========]] %>
<%+tsmodem/ui_widget/UIEventBus.js%>
<%+tsmodem/ui_widget/UITextareaHighlighted.js%>
<%+tsmodem/ui_widget/UIWebSocket.js%>
<%+tsmodem/ui_widget/UISiminfo.js%>
<%+tsmodem/ui_widget/UISimSettingModal.js%>
<%+tsmodem/ui_widget/UICover.js%>
<%+tsmodem/ui_widget/UICountdown.js%>
<%+tsmodem/ui_widget/UIJournal.js%>

<% 	--[[=========== STYLES ==========]] %>
<%+tsmodem/css%>

<% 	--[[=========== TSMODEM.CONSOLE ==========]] %>

<%+tsmconsole/ui_widgets/UIModal.js%>
<%+tsmconsole/ui_widgets/UIModalSMS_send.js%>


<% --[[=========== LUA BACKEND ==========]] %>

<%
	local config = "tsmodem"
	local uci = require "luci.model.uci".cursor()
	local util = require "luci.util"


	local sims_config = {} 	-- got from UCI config
	local sims_state = {}	-- got from realtime data
	sims_state = {
		["0"] = {
			balance = 29.30,
			balance_date = "15.05.2021",
			rssi = 21,
			bor = 0
		},
		["1"] = {
			balance = 280.55,
			balance_date = "15.05.2021",
			rssi = 28,
			bor = 1
		}

	}


	local ubus_sim = util.ubus("tsmodem.driver", "sim", {})
	local ubus_balance = util.ubus("tsmodem.driver", "balance", {})

	local sim_id = nil
	if(ubus_sim and type(ubus_balance) == "table") then
		sim_id = ubus_sim["value"]
	end



	if (sim_id and ((sim_id == "0") or (sim_id == "1")) and ubus_balance and (type(ubus_balance) == "table")) then
		uci:set("tsmodem", "sim_" .. sim_id, "balance", tostring(ubus_balance["value"]))
		uci:set("tsmodem", "sim_" .. sim_id, "balance_time", tostring(ubus_balance["time"]))
		uci:commit(config)


	end


	uci:foreach(config, "sim", function(a)
		sims_config[#sims_config+1] = a
	end)
	util.perror("=========================")
	util.dumptable(sims_config)
	local i = 1
	local function animationWrapper(str, is_active)
		local html = ''
		str = "" .. str
		if is_active then
			for c=1, #str do
				html = html .. string.format('<span class="anime">%s</span>', str:sub(c,c))
			end
		else html = str end
		return html
	end
%>

<% --[[=========== HTML ==========]] %>
<div id="view">
	<h2 name="content">Настройка переключения SIM-карт</h2>
	<div class="table cbi-map-descr">
		<div class="td">
			<p>Роутер BITCORD RTR-02 оснащён двухсимочным 4G/LTE модемом с функцией автоматического переключения SIM-карт.<br>Переключение с основной на резервную SIM-карту происходит при следующих условиях:</p>
				<ul>
					<li>Нет регистрации в GSM-сети</li>
					<li>Слабый сигнал от базовой станции GSM-сети</li>
					<li>Баланс средств на Сим-карте ниже минимума</li>
					<li>Сим-карта отсутствует в слоте, либо повреждена</li>
					<li>Нет доступа к Интернет в GSM-сети</li>
					<li>Интернет-ресурсы недоступны (отсутствует PING)</li>
				</ul>
			</p>
		</div>
		<div class="td" style="width: 50%; vertical-align: top;">
			<div id="ui-countdown"></div>
		</div>
	</div>
	<h3><%:GSM network channels (SIM cards states) %></h3>

	<div id="simcards_rows" class="table">
		<div class="tr table-titles">
			<div class="th">N</div>
			<div class="th">Слот</div>
			<div class="th"><%:SIM %></div>
			<div class="th" style="width: 33%;"><%:Status %></div>
			<div class="th"><%:PING %></div>
			<div class="th"><%:Mode %></div>
			<div class="th"><%:Strength %></div>
			<div class="th"><%:Balance %></div>
			<div class="th center nowrap cbi-section-actions"><%:Actions %></div>
		</div>
	</div>
</div>


<h3><%:System log %></h3>
<!-- TODO make html page works //-->
<table id="journal" class="table journal">
	<thead class="table-titles">
		<tr>
		<th><%:Date / time %></th>
		<th><%:Event %></th>
		<th><%:Source %></th>
		<th><%:Command %></th>
		<th><%:Responce %></th>
		</tr>
	</thead>
	<tbody id="journalBody"> 
	</tbody>
</table>
<div class="clear-journal" style="margin-top: 20px; text-align: center;">
	<input type="button" id="clearJournalButton" class="cbi-button cbi-button-apply"
		value="<%:Clear the log %>"
	/>
</div>

<span id="btn_enable_spinner" class="btn_spinner"></span> 

<script type="text/javascript">
//<![CDATA[

L.require("ui").then(function(ui){
	L.require('dom').then(function(dom) {
		L.require("uci").then(function(uci) {
			uci.load("tsmodem").then(function(out){

				// Make name of Slot depending on auto or selected proto
				var sim_0_memo = uci.get("tsmodem", "sim_0", "name")
				sim_0_memo = (sim_0_memo == undefined) ? "" : sim_0_memo
				var sim_0_providerCode = uci.get("tsmodem", "sim_0", "provider")
				var sim_0_providerName = uci.get("tsmodem_adapter_provider", sim_0_providerCode, "name")
				var sim_0_providerAutoDetect = uci.get("tsmodem", "sim_0", "autodetect_provider")

				var sim_1_memo = uci.get("tsmodem", "sim_1", "name")
				sim_1_memo = (sim_1_memo == undefined) ? "" : sim_1_memo
				var sim_1_providerCode = uci.get("tsmodem", "sim_1", "provider")
				var sim_1_providerName = uci.get("tsmodem_adapter_provider", sim_1_providerCode, "name")
				var sim_1_providerAutoDetect = uci.get("tsmodem", "sim_1", "autodetect_provider")

				var sim_0 = new ui.Siminfo("Name 1", {
					simid: "0",
					name: sim_0_memo,
					autodetection_mode: sim_0_providerAutoDetect,
					provider: sim_0_providerName,
					cpin: "false",
					netreg: "7",
					ping_status: " ",
					netmode: " ",
					signal: " ",
					balance: " ",
				});
				var sim_1 = new ui.Siminfo("Name 2", {
					simid: "1",
					name: sim_1_memo,
					autodetection_mode: sim_1_providerAutoDetect,
					provider: sim_1_providerName,
					cpin: "false",
					netreg: "7",
					ping_status: " ",
					netmode: " ",
					signal: " ",
					balance: " ",
				});

				var viewWrapper= document.getElementById('simcards_rows');
				viewWrapper.appendChild(sim_0.render());
				viewWrapper.appendChild(sim_1.render());



				var sim_0_setting = new ui.SimSettingModal("Настройки сим-карты", {
					simid: "0",
				});

				var ui_cover = new ui.Cover("Переключение сим-карты", {
					simid: "0",
				});
				var widget_ui_cover = ui_cover.render()
				$("body").append(widget_ui_cover)

				var jur = new ui.Journal("",{});
				//console.log("JUR", jur.render())
				$("journalWrapper").append(jur.render());


				var viewWrapper= document.getElementById('simcards_rows');
				var widget_simsetting_0 = sim_0_setting.render()
				viewWrapper.appendChild(widget_simsetting_0)

				var console_modal = new ui.Modal();
				$("body").append(console_modal.render())

				var sms_send_modal = new ui.ModalSMS_send();
				$("body").append(sms_send_modal.render())

				console_modal.start_modem_automation()

			});
		});
	});
});

// $( document ).ready(function() {
//     console.log( "TD!" );
//     new DataTable('#journal');

// });
/*
$(document).ready( function () {
	$('#journal').DataTable();
} );
*/
/*
$(document).ready(function() {
	console.log("READY");
	$('#journal').paging({limit:2	});
});
*/

//]]>
</script>
